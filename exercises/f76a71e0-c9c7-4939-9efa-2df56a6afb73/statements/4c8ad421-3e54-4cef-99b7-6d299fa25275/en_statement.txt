<h2><code>FOREIGN KEY</code>.</h2><p>If the definition of the foreign key is put at the end, we will have to put the text <code>FOREIGN KEY</code> to specify to which field is referring to.</p><p>In the case in which the foreign key was made up of more than one attribute, it would be mandatory for the restriction to be placed after the definition of the attributes. Let's see an example with <code>COD_MATCH</code> and <code>MATCH_DATE</code> of the <code>MATCHES</code> table:</p><blockquote><pre><code>CREATE TABLE MATCHES ( <br /> COD_MATCH INTEGER,<br /> MATCH_DATE DATE,<br /> PRIMARY KEY (COD_MATCH, MATCH_DATE)<br />);</code></pre></blockquote><p></p> <blockquote><pre><code>CREATE TABLE USERS (<br /> COD_MATCH INTEGER,<br /> FIRST_NAME VARCHAR(25),<br /> LAST_NAME VARCHAR(50),<br /> MATCH_DATE DATE,<br / > CONSTRAINT Match_Cod_Date_FK FOREIGN KEY (COD_MATCH, MATCH_DATE)<br /> REFERENCES MATCHES<br />);</code></pre></blockquote><p>We have other solutions and it is to add after the <code>REFERENCES clause </code>:</p><ul><li><code>ON DELETE CASCADE</code>: will allow you to delete all the records whose foreign key is equal to the key of the deleted record.</li><li ><code>ON DELETE SET NULL</code>: will place the value <code>NULL </code> in all foreign keys related to the deletion.</li></ul><h3>Exercise:</h3 ><p>Suppose We see that we have to store data from the <code>MODULES</code>, according to the following definition:</p><blockquote><pre><code>CREATE TABLE MODULES (<br /> CODE INTEGER,<br /> NAME VARCHAR(100),<br /> DEGREE CHAR(3),<br /> PRIMARY KEY (CODE, DEGREE)<br />);</code></pre></blockquote><p>As material support, for each module a textbook is used, whose data will be stored in the following table:</p><blockquote><pre><code>CREATE TABLE BOOKS (<br /> ISBN NUMERIC PRIMARY KEY, <br /> TITLE VARCHAR(100),<br /> MODULE INTEGER,<br /> DEGREE CHAR(3)<br />);</code></pre></blockquote><p>Create the tables and relate them through a foreign key.</p>