<h2>Restrição <code>UNIQUE</code>.</h2><p>Haverá ocasiões em que teremos interesse em não poder repetir valores na coluna, nesses casos usaremos a restrição <a HREF="https: //www.postgresql.org/docs/14/ddl-constraints.html#DDL-CONSTRAINTS-UNIQUE-CONSTRAINTS" target="_blank"><code>UNIQUE</code></a >. O PostgreSQL cria automaticamente um índice quando esta restrição está habilitada e o exclui quando está desabilitada.</p><p>Também para esta restrição temos duas maneiras possíveis de escrevê-la, vejamos com um exemplo. Suponha que o campo <code>Login</code> em nossa tabela seja único. Vamos incluí-lo na tabela que estamos criando. Ficaria assim:</p><blockquote><pre><code>CREATE TABLE USERS (<br /> Login VARCHAR(25)<br /> CONSTRAINT Use_Log_UK UNIQUE<br />);</code>< /pre ></blockquote><p>Vamos ver de outra forma:</p><blockquote><pre><code>CREATE TABLE USERS (<br /> Login VARCHAR(25) UNIQUE<br />);</ code></pre></blockquote><p>Também podemos colocar essa restrição em vários campos ao mesmo tempo, por exemplo, se quisermos que <code>Login</code> e <code>EMAIL</code> sejam unique, poderíamos colocar assim:</p><blockquote><pre><code>CREATE TABLE USERS (<br /> Login VARCHAR(25),<br /> EMAIL VARCHAR(100),<br /> CONSTRAINT Users_UK UNIQUE (Login, EMAIL )<br />);</code></pre></blockquote><p>Se você notar, atrás do tipo de dados de <code>EMAIL</code> há uma vírgula , isso porque a restrição é independente desse campo e comum a vários. É por isso que depois de <code>UNIQUE</code> colocamos os nomes dos campos afetados pela restrição entre parênteses.</p><h3>Exercício:</h3><p>Like <code>EMAIL </p><h3>Exercício:</h3><p>Like <code>EMAIL </p> code> não deve ser repetido em dois alunos diferentes, adicione uma restrição à tabela do exercício anterior que impeça que dois alunos tenham o mesmo e-mail.</p>