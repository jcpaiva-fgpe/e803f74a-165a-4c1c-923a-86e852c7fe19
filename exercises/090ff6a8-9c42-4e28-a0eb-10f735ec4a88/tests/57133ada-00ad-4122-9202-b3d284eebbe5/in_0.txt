select table_name, contype, column_name, data_type
from information_schema.columns left join (
    select contype, pgc.conname as constraint_name, ccu.column_name
        from pg_constraint pgc
            left join information_schema.constraint_column_usage ccu
                on pgc.conname = ccu.constraint_name
        where contype IN('u', 'p') and lower(table_name) IN ('modules', 'books') 
    ) uniques using (column_name)
where table_schema = 'public' and lower(table_name) IN ('modules', 'books')

union

select kcu.table_name as foreign_table, '>' as rel, rel_tco.table_name as primary_table, string_agg(kcu.column_name, ', ') as fk_columns
from information_schema.table_constraints tco
    join information_schema.key_column_usage kcu on tco.constraint_schema = kcu.constraint_schema and tco.constraint_name = kcu.constraint_name
    join information_schema.referential_constraints rco on tco.constraint_schema = rco.constraint_schema and tco.constraint_name = rco.constraint_name
    join information_schema.table_constraints rel_tco on rco.unique_constraint_schema = rel_tco.constraint_schema and rco.unique_constraint_name = rel_tco.constraint_name
where tco.constraint_type = 'FOREIGN KEY' and lower(kcu.table_name) IN ('modules', 'books') and rel_tco.table_schema ='public'
group by kcu.table_schema, kcu.table_name, rel_tco.table_name, rel_tco.table_schema, kcu.constraint_name
order by contype, table_name, column_name;