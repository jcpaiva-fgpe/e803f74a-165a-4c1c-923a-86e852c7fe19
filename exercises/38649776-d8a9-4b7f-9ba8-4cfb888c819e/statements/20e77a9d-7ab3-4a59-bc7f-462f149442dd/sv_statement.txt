<h2><a href="https://www.postgresql.org/docs/14/ddl-constraints.html#DDL-CONSTRAINTS-FK" target="_blank"><code>REFERENSER</code></ a>.</h2><p>Främmande nycklar är kolumner i en tabell som var relaterade till primärnyckeln (eller till och med kandidatnyckeln) för en annan tabell.</p><p>När vi skapar tabellen måste vi indikera på något sätt vad den främmande nyckeln är. Vi kommer att göra detta genom att "referera" tabellen och attributen den kom ifrån.</p><p>Föreställ dig att vi har skapat tabellen <code>MATCHES</code> med följande kommando:</p><blockquote> < pre><code>SKAPA TABELL MATCHAR (<br /> COD_MATCH INTEGER PRIMARY KEY,<br /> MATCH_DATE DATE<br />);</code></pre></blockquote><p>I vår tabell < kod >USERS</code> vi kommer att ha en främmande nyckel från tabellen <code>MATCHES</code> som kommer att vara dess <code>COD_MATCH</code>, därför måste vi hänvisa till den:</ p>< blockquote><pre><code>SKAPA TABELLANVÄNDARE (<br /> COD_MATCH INTEGER<br /> CONSTRAINT Cod_Match_FK<br /> REFERENCES MATCHES(COD_MATCH)<br />);</code></pre> </blockquote ><p>Om fältet du refererar till är den primära nyckeln i din tabell, behöver du inte ange namnet på fältet:</p><blockquote ><pre><code>SKAPA TABELLANVÄNDARE ( <br /> COD_MATCH INTEGER< br /> CONSTRAINT Cod_Match_FK<br /> REFERENSER MATCHAR<br />);</code></pre></blockquote><p>Till relationen För att lägga till fält behöver vi data för fältet som är en främmande nyckel i en tabell (som vi kommer att kalla sekundär) för att tidigare ha inkluderats i dess ursprungstabell där det är en primär eller kandidatnyckel. I vårt exempel bör alla <code>COD_MATCH</code> som vi inkluderar i tabellen <code>USERS</code> tidigare finnas i tabellen den kommer från, det vill säga i <code>MATCHES</code> > tabellkod >. <strong>Detta kallas referensintegritet.</strong></p><p>Detta kan skapa vissa fel, eftersom följande kan inträffa:</p><ul><li>Om vi ​​hänvisar till en tabell som är inte skapad: DBMS kommer att söka efter den refererade tabellen och misslyckas med att hitta den kommer att misslyckas. Detta löses genom att först skapa de tabeller som inte har främmande nycklar.</li><li>Om vi ​​vill ta bort tabellerna måste vi göra tvärtom, vi tar först bort de tabeller som har främmande nycklar.</ li></ul> <h3>Övning:</h3><p>Anta att vi måste lagra data från <code>MODULER</code>, enligt följande definition:</p><blockquote><pre> <code>SKAPA TABELLMODULER ( <br /> PRIMÄR KOD HELTALSNYCKEL,<br /> NAMN VARCHAR(100),<br /> FAKULTETETAR(3)<br />);</code></pre>< /blockquote><p>Undervisningen av var och en av dessa <code>MODULER</code> motsvarar en av <code>FAKULTETERNA</code>, vars data lagras i följande tabell:</p><blockquote> <pre><code> SKAPA TABELLFAKULTETER (<br /> COD_FACULTY CHAR(3) PRIMÄRNYCKEL,<br /> NAMN VARCHAR(100)<br />);</code></pre></blockquote>< p>Skapa tabellerna och relatera dem genom en främmande nyckel.</p>