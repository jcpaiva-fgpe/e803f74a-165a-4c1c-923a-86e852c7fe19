<h2><a href="https://www.postgresql.org/docs/14/ddl-constraints.html#DDL-CONSTRAINTS-FK" target="_blank"><code>REFERENCES</code></ a>.</h2><p>Foreign keys are columns in one table that were related to the primary key (or even candidate key) of another table.</p><p>When creating the table , we will have to indicate, in some way, what the foreign key is. We will do this by "referencing" the table and attributes it came from.</p><p>Imagine that we have created the <code>MATCHES</code> table with the following command:</p><blockquote>< pre><code>CREATE TABLE MATCHES (<br /> COD_MATCH INTEGER PRIMARY KEY,<br /> MATCH_DATE DATE<br />);</code></pre></blockquote><p>In our table <code >USERS</code> we are going to have a foreign key from the table <code>MATCHES</code> that will be its <code>COD_MATCH</code>, therefore we will have to refer to it:</p>< blockquote><pre><code>CREATE TABLE USERS (<br /> COD_MATCH INTEGER<br /> CONSTRAINT Cod_Match_FK<br /> REFERENCES MATCHES(COD_MATCH)<br />);</code></pre></blockquote ><p>If the field you refer to is the primary key in your table, you do not need to indicate the name of the field:</p><blockquote><pre><code>CREATE TABLE USERS (<br /> COD_MATCH INTEGER< br /> CONSTRAINT Cod_Match_FK<br /> REFERENCES MATCHES<br />);</code></pre></blockquote><p>To the relation To add fields, we need the data of the field that is a foreign key in a table (which we will call secondary) to have previously been included in its table of origin where it is a primary or candidate key. In our example, any <code>COD_MATCH</code> that we include in the <code>USERS</code> table, should previously be in the table it comes from, that is, in the <code>MATCHES</code> table. code>. <strong>This is called Referential Integrity.</strong></p><p>This can create some errors, as the following can occur:</p><ul><li>If we refer to a table that is not created: the DBMS will search for the referenced table and failing to find it will fail. This is solved by first creating the tables that do not have foreign keys.</li><li>If we want to delete the tables we will have to do the opposite, we will delete the tables that have foreign keys first.</li></ul> <h3>Exercise:</h3><p>Suppose we have to store data from <code>MODULES</code>, according to the following definition:</p><blockquote><pre><code>CREATE TABLE MODULES ( <br /> CODE INTEGER PRIMARY KEY,<br /> NAME VARCHAR(100),<br /> FACULTY CHAR(3)<br />);</code></pre></blockquote><p>The teaching of each of these <code>MODULES</code> corresponds to one of the <code>FACULTIES</code>, whose data is stored in the following table:</p><blockquote><pre><code> CREATE TABLE FACULTIES (<br /> COD_FACULTY CHAR(3) PRIMARY KEY,<br /> NAME VARCHAR(100)<br />);</code></pre></blockquote><p>Create the tables and relate them through a foreign key.</p>