<p>Det finns tillfällen då vi behöver en data som ska inkluderas i en tabell på ett obligatoriskt sätt, andra gånger kommer vi att behöva definiera ett av fälten som en primär eller främmande nyckel. Vi kommer att kunna göra allt detta när vi definierar tabellen, förutom andra alternativ.</p><p>En <strong>restriktion</strong> är ett villkor som en eller flera kolumner måste uppfylla.</p> p><p>Varje begränsning som vi skapar kommer att ha ett namn, om vi inte anger det kommer DBMS som vi använder att göra det. Det är bekvämt att vi ger det ett namn som hjälper oss att identifiera det och som är unikt för varje system (användare). Det är en bra idé att på något sätt inkludera tabellens namn, de inblandade fälten och begränsningstypen i tabellens namn.</p><h3>Syntax:</h3><p>Syntaxen i standard SQL är följande:</p><blockquote><pre><code>SKAPA TABELL TABLE_NAME (<br /> Kolumn1 Data_Type<br /> [CONSTRAINT constraint_name]<br /> [NOT NULL]<br /> [UNIQUE]< br /> [PRIMÄRNYCKEL]<br /> [FREIGN KEY]<br /> [DEFAULT-värde]<br /> [REFERENS tabellnamn [(kolumn [, kolumn ])]<br /> [PÅ DELETE CASCADE]]< br /> [CHECK condition],<br /> Kolumn2 Data_Type<br /> [CONSTRAINT constraint_name]<br /> [INTE NULL]...<br /> ,...<br />);</code ></pre></blockquote><p>Låt oss se ett exempel:</p><blockquote><pre><code>SKAPA TABELLANVÄNDARE (<br /> Logga in VARCHAR(15) CONSTRAINT usu_log_PK PRIMÄRNYCKEL,<br / > Lösenord VARCHAR(8) NOT NULL,<br /> HIRE_DATE DATE DEFAULT CURRENT_DATE<br />);</code></pre></blockquote><h2>Begränsning <a href="https://www . postgresql.org/docs/14/ddl-constraints.html#id-1.5.4.6.6" target="_blank"><code>INTE NU LL</code></a>.</h2><p>Med denna begränsning kommer vi att tvinga den kolumnen att ha ett värde eller vad som är detsamma, det förbjuder nullvärden för en kolumn i en viss tabell.< /p ><p>Vi kan lägga till det när vi skapar eller ändrar fältet genom att lägga till ordet <code>NOT NULL</code> efter att ha angett datatypen.</p><p>Ja i tabellen <code> ANVÄNDARE</code > vi vill att fältet <code>FÖDELSEDATUM</code> ska vara obligatoriskt, det skulle se ut så här:</p><blockquote><pre><code>SKAPA TABELLANVÄNDARE (<br /> FÖDELSEDATUM DATUM <br /> CONSTRAINT Use_BirDate_NN NOT NULL);</code></pre></blockquote><p>eller på det här andra sättet:</p><blockquote><pre><code>SKAPA TABELLANVÄNDARE (< br /> BIRTH_DATE DATE NOT NULL);</code></pre></blockquote><p>Vi måste vara försiktiga med null-värden i operationer, eftersom <code>1 * NULL</code> är lika med <code>NULL< /code>.</p><p>Övning:</p><p>Vi kommer att inkludera begränsningar i tabellen <code>STUDENTER</code> som sågs i föregående övning. Attributen och deras typer måste vara desamma som de som anges ovan:</p><ul><li><code>ID</code>: som innehåller nummer med upp till 8 siffror utan decimaler.</li><li >< code>NIF</code>: som innehåller en kombination av siffror och bokstäver med upp till 9 tecken.</li><li><code>LAST_NAME</code>: tidigare har vi redan begränsat längden på detta attribut till 50 tecken. </li><li><code>FIRST_NAME</code>: tidigare har vi redan begränsat längden på detta attribut till 25 tecken.</li><li><code>FÖDELSEDATUM</code>: logiskt sett lagrar den ett datum .</li><li><code>NATIONALITY</code>: Kommer att lagra teckensträngar med en maximal längd på 30.</li><li><code>EMAIL</code>: Kommer också att lagra strängar upp till 100 tecken.</li><li><code>TELEFON</code>: den lagrar endast siffrorna, utan mellanslag eller prefix.</li></ul><p>Dessutom måste du tvinga fram att <code>-attributen LAST_NAME</code>, <code>FIRST_NAME</code> och <code>EMAIL</code> för varje rad i tabellen har något värde, eftersom det inte är tillåtet att och värdet som är associerat med dessa attribut är <code>NULL</code>.</p>