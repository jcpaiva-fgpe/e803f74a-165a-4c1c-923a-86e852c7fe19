<p>Há momentos em que precisamos que um dado seja incluído em uma tabela de forma obrigatória, outras vezes precisaremos definir um dos campos como chave primária ou estrangeira. Poderemos fazer tudo isso quando definirmos a tabela, além de outras opções.</p><p>Uma <strong>restrição</strong> é uma condição que uma ou várias colunas devem atender obrigatoriamente.</p> p><p>Cada restrição que criarmos terá um nome, se não colocarmos, o SGBD que estivermos usando o fará. É conveniente que lhe demos um nome que nos ajude a identificá-lo e que seja único para cada esquema (utilizador). É uma boa ideia incluir de alguma forma o nome da tabela, os campos envolvidos e o tipo de restrição no nome da tabela.</p><h3>Sintaxe:</h3><p>A sintaxe no SQL padrão é o seguinte:</p><blockquote><pre><code>CREATE TABLE TABLE_NAME (<br /> Coluna1 Data_Type<br /> [CONSTRAINT constraint_name]<br /> [NOT NULL]<br /> [UNIQUE]< br /> [CHAVE PRIMÁRIA]<br /> [CHAVE ESTRANGEIRA]<br /> [valor PADRÃO]<br /> [REFERÊNCIAS tableName [(coluna [, coluna ])]<br /> [ON DELETE CASCADE]]< br /> [CHECK condition],<br /> Column2 Data_Type<br /> [CONSTRAINT constraint_name]<br /> [NOT NULL]...<br /> ,...<br />);</code ></pre></blockquote><p>Vamos ver um exemplo:</p><blockquote><pre><code>CREATE TABLE USERS (<br /> Login VARCHAR(15) CONSTRAINT usu_log_PK PRIMARY KEY,<br / > Senha VARCHAR(8) NOT NULL,<br /> HIRE_DATE DATE DEFAULT CURRENT_DATE<br />);</code></pre></blockquote><h2>Restrição <a href="https://www . postgresql.org/docs/14/ddl-constraints.html#id-1.5.4.6.6" target="_blank"><code>NÃO NU LL</code></a>.</h2><p>Com essa restrição vamos forçar aquela coluna a ter um valor ou o que é o mesmo, ela proíbe valores nulos para uma coluna em determinada tabela.< /p ><p>Podemos colocá-lo quando criamos ou modificamos o campo adicionando a palavra <code>NOT NULL</code> depois de colocar o tipo de dados.</p><p>Sim na tabela <code> USERS</code > queremos que o campo <code>BIRTH_DATE</code> seja obrigatório, ficaria assim:</p><blockquote><pre><code>CREATE TABLE USERS (<br /> BIRTH_DATE DATE <br /> CONSTRAINT Use_BirDate_NN NOT NULL);</code></pre></blockquote><p>ou, desta forma:</p><blockquote><pre><code>CREATE TABLE USERS (< br /> BIRTH_DATE DATE NOT NULL);</code></pre></blockquote><p>Devemos ter cuidado com valores nulos nas operações, pois <code>1 * NULL</code> é igual a <code>NULL</code>.</p><p>Exercício:</p><p>Vamos incluir restrições na tabela <code>STUDENTS</code> vista no exercício anterior. Os atributos e seus tipos devem ser os mesmos descritos acima:</p><ul><li><code>ID</code>: que contém números de até 8 dígitos sem decimais.</li><li >< code>NIF</code>: que contém uma combinação de números e letras de até 9 caracteres.</li><li><code>LAST_NAME</code>: anteriormente já limitamos o comprimento deste atributo para 50 caracteres. </li><li><code>FIRST_NAME</code>: anteriormente já limitamos o comprimento deste atributo a 25 caracteres.</li><li><code>BIRTH_DATE</code>: logicamente, ele armazena uma data .</li><li><code>NATIONALITY</code>: armazenará cadeias de caracteres com um comprimento máximo de 30.</li><li><code>EMAIL</code>: Também armazenará strings de até 100 caracteres.</li><li><code>PHONE</code>: armazenará apenas os dígitos, sem espaços ou prefixo.</li></ul><p>Além disso , você deve forçar que os atributos <code> LAST_NAME</code>, <code>FIRST_NAME</code> e <code>EMAIL</code> de cada linha da tabela tenham algum valor, não sendo permitido que e o valor associado a esses atributos é <code>NULL</code>.</p>